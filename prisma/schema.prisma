// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id        Int      @id @default(autoincrement())
  title     String   // např. "Senior IT & Business Analyst"
  summary   String   @db.Text  // delší popis
  motto     String   @db.Text  // delší popis
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Experience {
  id          Int       @id @default(autoincrement())
  company     String
  position    String
  description Json      // For rich text content
  startDate   DateTime
  endDate     DateTime?
  isPresent   Boolean   @default(false)
  projects    Project[]
  order       Int       @default(0)
  isPublished Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id            Int         @id @default(autoincrement())
  title         String
  description   Json       // For rich text content
  technologies  String[]   // Array of tech stack
  startDate     DateTime?  // Změněno na volitelné
  endDate       DateTime?  // Už bylo volitelné
  isPresent     Boolean     @default(false)
  experience    Experience  @relation(fields: [experienceId], references: [id], onDelete: Cascade)
  experienceId  Int
  order         Int        @default(0)
  isPublished   Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Skill {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  level       Int
  category    String
  order       Int     @default(0)
  isPublished Boolean @default(false)
}

model Certificate {
  id          Int      @id @default(autoincrement())
  name        String
  issuer      String
  period      String
  skills      String[] @db.Text
  isPublished Boolean  @default(false)
  updatedAt   DateTime @updatedAt
}

model Contact {
  id          Int      @id @default(autoincrement())
  name        String
  position    String
  email       String?
  github      String?
  linkedin    String?
  phone       String?
  location    String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}