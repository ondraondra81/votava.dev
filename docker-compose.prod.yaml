services:
    web:
        build:
            context: ./
            dockerfile: docker/Dockerfile.app
        image: registry.votava.dev/votavadev/votava.dev:latest
        environment:
            - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            - NODE_ENV=production
            - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
            - NEXT_PUBLIC_BASE_URL=${APP_URL}
            - NEXTAUTH_URL=${APP_URL}
            - PUPPETEER_URL=http://web:3000
        depends_on:
            db:
                condition: service_healthy  # Wait for DB to be ready
        restart: always
        healthcheck:
            test: [ "CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://web:3000 | grep -q '200' && exit 0 || exit 1" ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 20s
        ports:
            -   '3000:3000'

    db:
        image: postgres:15-alpine
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=ov_website
            - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
            - ./storage/postgresql/data:/var/lib/postgresql/data
        restart: always
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
            -   "${DB_PORT}:5432"